<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
        <meta name="description" content="" />
        <meta name="author" content="" />
        <title>회원가입</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
        <script src="https://use.fontawesome.com/releases/v6.3.0/js/all.js" crossorigin="anonymous"></script>
        <style>
            body {
                background-color: #f8f9fa;
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            }
            .form-container {
                max-width: 500px;
                margin: 50px auto;
                padding: 30px;
                background-color: #ffffff;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
                border-radius: 10px;
            }
            .form-label {
                font-weight: bold;
                color: #333;
            }
            .form-control {
                border-radius: 5px;
            }
            .btn-custom {
                background-color: #007bff;
                color: white;
                border: none;
                border-radius: 5px;
                padding: 10px 20px;
                cursor: pointer;
                transition: background-color 0.3s ease;
            }
            .btn-custom:hover {
                background-color: #0056b3;
            }
        </style>
    </head>
    <body>
        <%- include('../menu.html') %>
        <form action="/auth/sign-up" method="post" onsubmit="return validateForm()">
            <div class="form-container">
                <div class="mb-3">
                    <label for="exampleFormControlInput1" class="form-label">아이디</label>
                    <div class="input-group">
                        <input name="userid" type="text" class="form-control" id="form_userid" required="required">
                        <button type="button" class="btn btn-primary" onclick="checkIdDuplicate()">중복 확인</button>
                    </div>
                    <div id="idError" class="invalid-feedback"></div>
                </div>
                <div class="mb-3">
                    <label for="exampleFormControlInput1" class="form-label">비밀번호</label>
                    <input name="userpw" type="password" class="form-control" id="form_userpw" required="required">
                    <div id="passwordError" class="invalid-feedback"></div>
                </div>
                <div class="mb-3">
                    <label for="exampleFormControlInput1" class="form-label">이메일</label>
                    <input name="email" type="email" class="form-control" id="form_useremail" required="required">
                    <div id="emailError" class="invalid-feedback"></div>
                </div>
                <div class="mb-3">
                    <label for="exampleFormControlInput1" class="form-label">생년월일</label>
                    <input name="birthday" type="date" class="form-control" id="form_userbirthday" required="required">
                    <div id="birthdayError" class="invalid-feedback"></div>
                </div>
                <div class="d-flex justify-content-end">
                    <button type="submit" class="btn btn-primary">가입</button>
                </div>
            </div>
        </form>

        <% if (typeof data != 'undefined' && data.alertMsg) { %>
        <script>alert('<%= data.alertMsg %>');</script>
        <% } %>
    
        <script>
            function showIdError(message, isValid = false) {
                const idErrorElement = document.getElementById('idError');
                idErrorElement.textContent = message;
                idErrorElement.classList.toggle('invalid-feedback', isValid);
            }

            function checkIdDuplicate() {
                const userid = document.getElementById('form_userid').value;

                // 아이디 길이 검사
                if (userid.length < 4) {
                    showIdError('아이디는 4자리 이상으로 해주세요.');
                    return;
                }

                // 서버에 아이디 중복 체크 요청
                fetch('/auth/check-id', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ userid }),
                    })
                    .then(response => response.json())
                    .then(data => {
                        // 아이디 중복 여부에 따른 메시지 표시
                        if (data.isDuplicate) {
                            showIdError('이미 사용 중인 아이디입니다.');
                        } else {
                            showIdError('사용 가능한 아이디입니다.');
                        }
                    })
                    .catch(error => {
                        console.error('Error checking ID duplicate:', error);
                    });
            }
            
            function validateForm() {
                let isValid = true;

                const idInput = document.querySelector('input[name="userid"]');
                const idError = document.getElementById('idError');
                if (idInput.value.length < 4) {
                    idError.textContent = '아이디는 4자리 이상으로 입력해주세요.';
                    idInput.classList.add('is-invalid');
                    isValid = false;
                } else {
                    idError.textContent = '';
                    idInput.classList.remove('is-invalid');
                }

                const passwordInput = document.querySelector('input[name="userpw"]');
                const passwordError = document.getElementById('passwordError');
                if (passwordInput.value.length < 4) {
                    passwordError.textContent = '비밀번호는 4자리 이상으로 입력해주세요.';
                    passwordInput.classList.add('is-invalid');
                    isValid = false;
                } else {
                    passwordError.textContent = '';
                    passwordInput.classList.remove('is-invalid');
                }

                const emailInput = document.querySelector('input[name="useremail"]');
                const emailError = document.getElementById('emailError');
                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                if (!emailRegex.test(emailInput.value)) {
                    emailError.textContent = '이메일 형식이 올바르지 않습니다.';
                    emailInput.classList.add('is-invalid');
                    isValid = false;
                } else {
                    emailError.textContent = '';
                    emailInput.classList.remove('is-invalid');
                }

                return isValid;
            }
        </script>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    </body>
</html>